#!/usr/bin/python
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys

from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

from selenium.webdriver.common.by import By
from selenium.common.exceptions import NoSuchElementException 

import pyperclip
import sys, getopt

project_no = input("Project Name:")
if project_no == "":
    project_no = 1

projectdict = {
        1: "Yupi Indo Jelly Gum, PT"
}
print (projectdict[project_no])

doc_type = input("Document type:").capitalize()
if doc_type == "":
    doc_type = "PPR"

docdict = {
    "PTS": "FM-IM-PTS-Project Team Structure",
    "TIM": "FM-IM-TIM-Timeline Proposal",
    "ASN": "FM-IM-ASN-Assessment Notes",
    "DMF": "FM-IM-DMF-Data Migration",
    "STD": "FM-IM-STD-Standard System Delivery",
    "SDL": "FM-IM-SDL-Software Delivery",
    "ENV": "FM-IM-ENV-Environment Configuration",
    "SSC": "FM-IT-SSC-Server Security Checklist",
    "TRA": "FM-IM-TRA-Training Attendance",
    "TRD": "FM-IM-TRD-Training Delivery",
    "TFE": "FM-IM-TFE-Training Feedback",
    "SVE": "FM-IM-SVE-System Verification",
    "LAF": "FM-IM-LAF-Launch Acceptance Form",
    "CSF": "FM-IM-CSF-Customization Specification Form",
    "CCF": "FM-IM-CCF-Customization Completion Report",
    "CRQ": "FM-IM-CRQ-Change Request",
    "CDF": "FM-IM-CDF-Customization Delivery Form",
    "UAT": "FM-QA-UAT-User Acceptance",
    "IMC": "FM-IM-IMC-Implementation Conclusion",
    "SUS": "FM-IM-SUS-Project Suspension",
    "SRQ": "FM-IM-SRQ-Service Request",
    "PPR": "FM-IM-PPR-Project Progress Report"
}

print (docdict[doc_type])
#sys.exit()
# start add-on, run driver from file path
#from selenium.webdriver.chrome.service import Service
#
#service = Service(executable_path="/home/mc/Downloads/chromedriver")
#driver = webdriver.Chrome(service=service)
# end add-on
username = 'marctinius'
password = 'AkuLelakimu'

driver = webdriver.Chrome()
driver.implicitly_wait(30)

driver.get('http://support.dataon.com/insys')
#driver.get('https://sf7demo.dataon.com/')

driver.find_element("xpath",'//input[@id="loginUsername-inputEl"]').send_keys(username)
driver.find_element("xpath",'//input[@id="loginPassword-inputEl"]')\
        .send_keys(password)
login_button = driver.find_element("xpath",'//*[@id="login_button-btnEl"]')
login_button.click()

#print (login_button)

# Check if element exists
def check_exists_by_xpath(xpath):
    try:
        driver.find_element("xpath",xpath)
    except NoSuchElementException:
        return False
    return True

login_button_exists = check_exists_by_xpath('//*[@id="login_button-btnEl"]')

if login_button_exists:
    login_button.click()

# Bersiapa untuk membuka tab baru dan pindah tab
# Setup wait for later
wait = WebDriverWait(driver, 3)

# Store the ID of the original window
original_window = driver.current_window_handle

# Check we don't have other windows open already
assert len(driver.window_handles) == 1

# Click for document directory
driver.find_element("xpath",'//button[@id="documents-btnEl"]').click()

# Wait for the new window or tab
#wait.until(EC.number_of_windows_to_be(2))

# Loop through until we find a new window handle
for window_handle in driver.window_handles:
    if window_handle != original_window:
        driver.switch_to.window(window_handle)
        break

#print (driver.title)
#print (driver.current_url)

# Wait for the new tab to finish loading content
wait.until(EC.title_is("Document Management System"))

# click FOR new document, ada error menggunakan .click() saja maka perlu ada tambahan execute_script
button = driver.find_element("xpath",'//*[@id="btnTrans"]')
driver.execute_script("arguments[0].click();",button)

# Click for date
driver.find_element("xpath",'//*[@id="newDocDate-inputEl"]').click()
# Click for second row of the month
driver.find_element("xpath",'//*[@class="x-datepicker x-layer x-datepicker-default x-unselectable"]/div/table/tbody/tr[2]/td[1]').click()

driver.find_element("xpath",'//*[@id="cbxTitle-inputEl"]').send_keys(projectdict[project_no])
#WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@class="x-boundlist-item"][1]')))
driver.find_element("xpath",'//*[@class="x-boundlist-item x-boundlist-item-over"][1]').click()
driver.find_element("xpath",'//*[@id="cbxList-inputEl"]').send_keys(docdict[doc_type])
driver.find_element("xpath",'//*[@class="x-boundlist-item x-boundlist-item-over"][1]').click()

driver.find_element("xpath",'//*[@id="newDocSubject-inputEl"]').send_keys(' ')

tmp = []
for tmp in driver.find_elements(By.CLASS_NAME,"x-btn-inner"):
    title = tmp.text
    if title == "Save":
        tmp.click()
        break

doc_no = driver.find_element("xpath",'//*[@class="x-window ux-notification-window x-layer x-window-default x-closable x-window-closable x-window-default-closable"]/div[2]').text
print (doc_no)

pyperclip.copy(doc_no)

driver.quit()

#driver.find_element("xpath",'//*[@id="//div[@class="x-toolbar x-docked x-toolbar-footer x-docked-bottom x-toolbar-docked-bottom x-toolbar-footer-docked-bottom x-box-layout-ct"]/div/div/div"]').click()
#hoverable = driver.find_element("xpath",'//aside//span[@aria-label="clock-circle"]')
#ActionChains(driver).move_to_element(hoverable).perform()

#userinput = driver.find_element("xpath",'//input[@id="loginPassword-inputEl"]')
#
#ActionChains(driver)\
#    .send_keys('AkuLelakimu')\
#    .key_down(Keys.RETURN)\
#    .perform()
#print ('I waited and I finally found the element')
